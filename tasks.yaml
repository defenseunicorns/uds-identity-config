variables:
  - name: VERSION
    description: "The image tag"
    # x-release-please-start-version
    default: "0.3.6"
    # x-release-please-end
  - name: IMAGE_NAME
    description: "The repository + name for the published image"
    default: "ghcr.io/defenseunicorns/uds/identity-config"

tasks:
  - name: build-and-publish
    description: "Build and publish the multi-arch image"
    actions:
      - cmd: docker buildx build --push --platform linux/arm64/v8,linux/amd64 --tag ${IMAGE_NAME}:${VERSION} src
  
  - name: build-zarf-pkg
    description: "Build the custom docker image and the zarf package for transporting it"
    actions:
      - cmd: docker build --tag ${IMAGE_NAME}:${VERSION} src
      - cmd: ./uds zarf package create . --set IDENTITY_CONFIG_IMG=${IMAGE_NAME}:${VERSION} --confirm

  - name: dev-build
    description: "Build the image locally for dev"
    actions:
      - cmd: docker build src -t uds-core-config:keycloak

  - name: dev-update-image
    description: "Build the image and import locally into k3d"
    actions:
      - task: dev-build
      - cmd: |
          k3d image import -c uds uds-core-config:keycloak
          kubectl rollout restart statefulset -n keycloak keycloak

  - name: dev-theme
    description: "Copy theme to Keycloak in dev cluster"
    actions:
      - cmd: |
          PV=$(kubectl get pvc keycloak-themes -n keycloak -o jsonpath='{.spec.volumeName}')
          THEME_PATH=$(kubectl get pv $PV -o jsonpath="{.spec.hostPath.path}")
          docker cp src/theme k3d-uds-server-0:/$THEME_PATH

  - name: dev-plugin
    description: "Build and test Keycloak plugin source and create maven-surefire report"
    actions:
      - cmd: |
          cd src/plugin
          mvn surefire-report:report | egrep ".*"

  - name: cacert
    description: "Get the CA cert value for the Istio Gateway"
    actions:
      # This is written to a file rather than printed because it is a massive value to copy out of the terminal
      - cmd: |
          docker run --rm --entrypoint sh ${IMAGE_NAME}:${VERSION} -c "cat /home/nonroot/authorized_certs.pem | base64 -w 0" > cacert.b64
          echo "Base64 encoded CA Cert value is in cacert.b64, this can be passed to your Istio tenant gateway for Keycloak OPTIONAL_MUTUAL"

  - name: debug-istio-traffic
    description: "Debug Istio traffic on keycloak"
    actions:
      - cmd: istioctl proxy-config log keycloak-0.keycloak --level debug
      - cmd: kubectl -n keycloak logs keycloak-0 -c istio-proxy -f

  - name: regenerate-test-pki
    description: "Generate a PKI cert for testing"
    actions:
      - cmd: |
          openssl genrsa -out test.pem 2048
          openssl genrsa -out ca.pem 2048
          openssl req -x509 -new -nodes -key ca.pem -sha256 -days 1825 -out ca.crt -subj "/C=US/O=U.S. Government/OU=DoD/OU=PKI/CN=DOD ID CA-59 FAKE TEST"
          openssl req -new -key test.pem -out test.csr -config csr.conf -subj "/C=US/ST=Colorado/L=Colorado Springs/O=Defense Unicorns/CN=uds.dev"
          openssl x509 -req -in test.csr -CA ca.crt -CAkey ca.pem -CAcreateserial -out test.cer -days 365 -extensions v3_ext -extfile csr.conf
          zip src/authorized_certs ca.crt ca.pem test.cer test.csr test.pem
