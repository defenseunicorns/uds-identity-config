global
    daemon
    maxconn 256
    log stdout format raw daemon
    tune.ssl.cachesize 0

defaults
    mode http
    option  httplog
    log global
    option logasap
    option dontlognull
    option http-server-close
    option httpclose

frontend with-syslog
    bind *:443 ssl crt /etc/haproxy/certs/haproxy.pem ca-file /etc/haproxy/certs/haproxy-client-ca.pem verify optional
    default_backend servers
    http-request set-header X-SSL                  %[ssl_fc]
    http-request set-header X-SSL-Session_ID       %[ssl_fc_session_id,hex]
    http-request set-header X-SSL-Client-Verify    %[ssl_c_verify]
    http-request set-header X-SSL-Client-DN        %{+Q}[ssl_c_s_dn]
    http-request set-header X-SSL-Client-CN        %{+Q}[ssl_c_s_dn(cn)]
    http-request set-header X-SSL-Issuer           %{+Q}[ssl_c_i_dn]
    http-request set-header X-SSL-Client-NotBefore %{+Q}[ssl_c_notbefore]
    http-request set-header X-SSL-Client-NotAfter  %{+Q}[ssl_c_notafter]
    http-request set-header x-SSL-CLIENT-CERT-DER  %{+Q}[ssl_c_der]
    http-request set-header x-amzn-mtls-clientcert "-----BEGIN CERTIFICATE-----%%0A%[ssl_c_der,base64]%%0A-----END CERTIFICATE-----%%0A"
    log global
    log-format "${HAPROXY_HTTP_LOG_FMT} hdrs:%{+Q}[var(txn.req_hdrs)]"
    option httplog
    option logasap
    option dontlognull
    option http-server-close
    option httpclose


backend servers
    server server1 ${TENANT_GATEWAY_IP}:80 check
    http-request set-header X-Real-IP %[src]
    http-request set-header X-Forwarded-Host %[req.hdr(host)]
    http-request set-header X-Forwarded-Port 443
    http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Proto https
    http-response set-header server "UDS HAProxy"
    log global
